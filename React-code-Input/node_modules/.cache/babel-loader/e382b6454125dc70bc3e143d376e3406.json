{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\hassa\\\\Documents\\\\GitHub\\\\SlotMachineReact\\\\slothmachine\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport firebase from './firebase.js';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newPlayerContent: '',\n      exists: null\n    };\n    this.writePlayer = this.writePlayer.bind(this);\n    this.checkIfUserExists = this.checkIfUserExists.bind(this);\n  }\n\n  checkIfUserExists(newPlayerContent) {\n    var playersRef = firebase.database().ref().child('players');\n    playersRef.once('value', function (snapshot) {\n      if (snapshot.hasChild(newPlayerContent)) {\n        this.setState({\n          exists\n        });\n      }\n    });\n  }\n\n  writePlayer() {\n    if (this.exists !== null) {\n      this.props.addPlayer(this.state.newPlayerContent);\n      this.setState({\n        newPlayerContent: ''\n      });\n    } else {\n      console.log(\"This player already exists.\");\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault(); //removes default behaviors like reloading on pressing submit.\n\n    const inputcode1Ref = firebase.database().ref('inputcode1');\n    inputcode1Ref.equalTo('SlothCode').once(\"value\", snapshot => {\n      const userData = snapshot.val();\n\n      if (userData) {\n        console.log(\"exists!\");\n        this.state.duplicate = true;\n        console.log(this.state.duplicate);\n      } else {\n        console.log(\"does not exist.\");\n        this.state.duplicate = false;\n        console.log(this.state.duplicate);\n      }\n    });\n    const item = {\n      SlothCode: this.state.currentItem\n    };\n    inputcode1Ref.set(item);\n    this.setState({\n      currentItem: '',\n      SlothCode: ''\n    });\n  }\n\n  componentDidMount() {\n    const inputcode1Ref = firebase.database().ref('inputcode1');\n    inputcode1Ref.on('value', snapshot => {\n      let inputcode1 = snapshot.val();\n      let newState = [];\n\n      for (let item in inputcode1) {\n        newState.push({\n          id: item,\n          SlothCode: inputcode1[item].SlothCode\n        });\n      }\n\n      this.setState({\n        inputcode1: newState\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrapper\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Codes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"add-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"currentItem\",\n            placeholder: \"Enter Code\",\n            onChange: this.handleChange,\n            value: this.state.currentItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: this.handleSubmit,\n            children: \"Enter Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"display-item\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wrapper\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: this.state.inputcode1.map(item => {\n                return /*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: \"your code has been sent\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/hassa/Documents/GitHub/SlotMachineReact/slothmachine/src/App.js"],"names":["React","Component","Button","firebase","App","constructor","props","state","newPlayerContent","exists","writePlayer","bind","checkIfUserExists","playersRef","database","ref","child","once","snapshot","hasChild","setState","addPlayer","console","log","handleSubmit","e","preventDefault","inputcode1Ref","equalTo","userData","val","duplicate","item","SlothCode","currentItem","set","componentDidMount","on","inputcode1","newState","push","id","render","handleChange","map"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css'\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport firebase from './firebase.js'\n\nclass App extends Component {\n  constructor(props) {\n      super(props);\n      this.state= {\n          newPlayerContent: '',\n          exists: null\n      };\n\n      this.writePlayer = this.writePlayer.bind(this);\n      this.checkIfUserExists = this.checkIfUserExists.bind(this);\n  }\n\n\n  checkIfUserExists(newPlayerContent) {\n  var playersRef = firebase.database().ref().child('players');\n\n  playersRef.once('value', function(snapshot) {\n      if (snapshot.hasChild(newPlayerContent)) {\n          this.setState({ exists });\n      }\n    })\n   }\n\n  writePlayer(){\n      if(this.exists !== null){\n      this.props.addPlayer(this.state.newPlayerContent);\n      this.setState({\n          newPlayerContent: '',\n          })\n      }\n      else{\n      console.log(\"This player already exists.\")\n      }\n\n  }\n\n\n\n\n  handleSubmit(e) {\n    e.preventDefault(); //removes default behaviors like reloading on pressing submit.\n\n    const inputcode1Ref = firebase.database().ref('inputcode1');\n    inputcode1Ref.equalTo('SlothCode').once(\"value\",snapshot => {\n        const userData = snapshot.val();\n        if (userData){\n          console.log(\"exists!\");\n\n          this.state.duplicate = true;\n\n          console.log(this.state.duplicate)\n        }\n        else{\n          console.log(\"does not exist.\")\n          this.state.duplicate = false;\n          console.log(this.state.duplicate)\n        }\n    });\n    const item = {\n      SlothCode: this.state.currentItem\n    }\n    inputcode1Ref.set(item);\n    this.setState({\n      currentItem: '',\n      SlothCode: ''\n    });\n  }\n  componentDidMount() {\n    const inputcode1Ref = firebase.database().ref('inputcode1');\n    inputcode1Ref.on('value', (snapshot) => {\n      let inputcode1 = snapshot.val();\n      let newState = [];\n      for (let item in inputcode1) {\n        newState.push({\n          id: item,\n          SlothCode: inputcode1[item].SlothCode\n        });\n      }\n      this.setState({\n        inputcode1: newState\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div className='app'>\n        <header>\n            <div className=\"wrapper\">\n              <h1>Codes</h1>\n            </div>\n        </header>\n        <div className='container'>\n          <section className='add-item'>\n                  <input type=\"text\" name=\"currentItem\" placeholder=\"Enter Code\" onChange={this.handleChange} value={this.state.currentItem} />\n                <Button onClick={this.handleSubmit}>Enter Code</Button>\n          </section>\n          <section className='display-item'>\n              <div className=\"wrapper\">\n                <ul>\n                  {this.state.inputcode1.map((item) => {\n                    return (\n                      <h1>your code has been sent</h1>\n\n                    )\n                  })}\n                </ul>\n              </div>\n          </section>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}